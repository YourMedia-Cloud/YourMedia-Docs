name: Auto Move Issues & PRs in Project Board
on:
  issues:
    types: [opened, labeled]
  pull_request:
    types: [opened, review_requested, closed]

jobs:
  # Gestion des issues - Projet principal
  process-issues:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues'
    steps:
      - name: Move issue to main project
        uses: actions/add-to-project@v0.5.0
        with:
          project-url: "https://github.com/orgs/YourMedia-Cloud/projects/1"
          github-token: ${{ secrets.GH_PROJECT_TOKEN }}

  # Gestion des issues spécifiques à l'infrastructure
  process-infra-issues:
    needs: process-issues
    if: github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'infra')
    runs-on: ubuntu-latest
    steps:
      - name: Move issue to Infrastructure project
        uses: actions/add-to-project@v0.5.0
        with:
          project-url: "https://github.com/orgs/YourMedia-Cloud/projects/2"
          github-token: ${{ secrets.GH_PROJECT_TOKEN }}

  # Transfert des issues vers le bon dépôt en fonction du label
  transfer-issue:
    needs: process-issues
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest
    steps:
      - name: Determine Target Repo
        id: repo-selector
        run: |
          LABELS="${{ toJSON(github.event.issue.labels.*.name) }}"
          if [[ "$LABELS" == *"infra"* ]]; then
            echo "repo_name=YourMedia-Infrastructure" >> $GITHUB_ENV
          elif [[ "$LABELS" == *"api"* ]]; then
            echo "repo_name=YourMedia-API" >> $GITHUB_ENV
          elif [[ "$LABELS" == *"mobile"* ]]; then
            echo "repo_name=YourMedia-Mobile" >> $GITHUB_ENV
          elif [[ "$LABELS" == *"monitoring"* ]]; then
            echo "repo_name=YourMedia-Monitoring" >> $GITHUB_ENV
          elif [[ "$LABELS" == *"ci-cd"* ]]; then
            echo "repo_name=YourMedia-CICD" >> $GITHUB_ENV
          else
            echo "repo_name=YourMedia-Docs" >> $GITHUB_ENV
          fi

      - name: Transfer Issue with GitHub Script
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GH_PROJECT_TOKEN }}
          script: |
            const targetRepo = process.env.repo_name;
            const issueNumber = context.payload.issue.number;

            try {
              const newIssue = await github.rest.issues.create({
                owner: "YourMedia-Cloud",
                repo: targetRepo,
                title: context.payload.issue.title,
                body: context.payload.issue.body + "\n\n> **Issue transférée depuis** [" + context.repo.repo + "](" + context.payload.issue.html_url + ")",
                labels: context.payload.issue.labels.map(label => label.name)
              });

              console.log(`Issue créée : ${newIssue.data.html_url}`);

              await github.rest.issues.createComment({
                owner: "YourMedia-Cloud",
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: `✅ Cette issue a été transférée vers **[${targetRepo}](${newIssue.data.html_url})**`
              });

              await github.rest.issues.update({
                owner: "YourMedia-Cloud",
                repo: context.repo.repo,
                issue_number: issueNumber,
                state: "closed"
              });
            } catch (error) {
              console.error(`Error transferring issue: ${error.message}`);
              core.setFailed(error.message);
            }

  # Gestion des pull requests
  process-pull-requests:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Move PR to project
        uses: actions/add-to-project@v0.5.0
        with:
          project-url: "https://github.com/orgs/YourMedia-Cloud/projects/1"
          github-token: ${{ secrets.GH_PROJECT_TOKEN }}
