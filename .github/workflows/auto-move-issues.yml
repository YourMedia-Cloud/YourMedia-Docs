name: Auto Move Issues & PRs in Project Board

on:
  issues:
    types: [opened, labeled]
  pull_request:
    types: [opened, review_requested, closed]

jobs:
  # Gestion des issues - Projet principal
  process-issues:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues'
    steps:
      - name: Move issue to main project
        uses: actions/add-to-project@v0.5.0
        with:
          project-url: "https://github.com/orgs/YourMedia-Cloud/projects/1"
          github-token: ${{ secrets.GH_PROJECT_TOKEN }}

  # Gestion des issues spécifiques à l'infrastructure
  process-infra-issues:
    needs: process-issues
    if: contains(join(github.event.issue.labels.*.name, ' '), 'infra')
    runs-on: ubuntu-latest
    steps:
      - name: Move issue to Infrastructure project
        uses: actions/add-to-project@v0.5.0
        with:
          project-url: "https://github.com/orgs/YourMedia-Cloud/projects/2"
          github-token: ${{ secrets.GH_PROJECT_TOKEN }}

  # Transfert des issues vers le bon dépôt en fonction du label
  transfer-issue:
    needs: process-issues
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest
    steps:
      - name: Determine Target Repo
        id: repo
        run: |
          LABELS="${{ join(github.event.issue.labels.*.name, ' ') }}"
          if [[ $LABELS == *"infra"* ]]; then
            echo "repo=YourMedia-Infrastructure" >> $GITHUB_ENV
          elif [[ $LABELS == *"api"* ]]; then
            echo "repo=YourMedia-API" >> $GITHUB_ENV
          elif [[ $LABELS == *"mobile"* ]]; then
            echo "repo=YourMedia-Mobile" >> $GITHUB_ENV
          elif [[ $LABELS == *"monitoring"* ]]; then
            echo "repo=YourMedia-Monitoring" >> $GITHUB_ENV
          elif [[ $LABELS == *"ci-cd"* ]]; then
            echo "repo=YourMedia-CICD" >> $GITHUB_ENV
          else
            echo "repo=YourMedia-Docs" >> $GITHUB_ENV
          fi

      - name: Transfer Issue to correct repo
        uses: actions-cool/issues-helper@v3
        with:
          actions: transfer
          token: ${{ secrets.GH_PROJECT_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          owner: "YourMedia-Cloud"
          repo: ${{ env.repo }}

  # Gestion des pull requests
  process-pull-requests:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Move PR to project
        uses: actions/add-to-project@v0.5.0
        with:
          project-url: "https://github.com/orgs/YourMedia-Cloud/projects/1"
          github-token: ${{ secrets.GH_PROJECT_TOKEN }}

      - name: Update PR Status via API
        run: |
          STATUS="To Do"
          if [ "${{ github.event.action }}" == "review_requested" ]; then STATUS="Review"; fi
          if [ "${{ github.event.pull_request.merged }}" == "true" ]; then STATUS="Done"; fi

          curl -X POST -H "Authorization: Bearer ${{ secrets.GH_PROJECT_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/projects/columns/cards \
          -d '{
            "content_id": ${{ github.event.pull_request.id }},
            "content_type": "PullRequest",
            "column_id": 12345678
          }'

      - name: Close linked issue when PR is merged
        if: github.event.pull_request.merged == true
        run: |
          ISSUE_NUMBER=$(echo "${{ github.event.pull_request.body }}" | grep -oP '(?<=Closes #)\d+')
          if [[ ! -z "$ISSUE_NUMBER" ]]; then
            curl -X PATCH -H "Authorization: Bearer ${{ secrets.GH_PROJECT_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/issues/$ISSUE_NUMBER \
            -d '{"state": "closed"}'
          fi
